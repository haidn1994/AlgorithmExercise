/*
	일반적인 진법 변환과 똑같이 변환을 하면 된다. 그러나 조심해야 할 부분이 있다. 
	똑같이 진법변환을 하는 도중 나머지가 음수가 나오면 안된다는 점을 조심해서 코딩해야 한다.
	이 경우를 총 2가지로 나눠볼 수가 있다.

	1. 양수/-2
	2. 음수/-2

	각각의 경우에서 양수가 2로 나누어 떨어지는 경우와
	음수가 2로 나누어 떨어지는 경우로 나눌 수가 있다.
	예시를 들어보겠다.

	* 6/2 = 3 ... 0 <- 양수 짝수를 2로 나누는 경우
	* 7/2 = 3 ... 1 <- 양수 홀수를 2로 나누는 경우
	* -6/2 = -3 ... 0 <- 음수 짝수를 2로 나누는 경우
	* -7/2 = -4 ... 1 <- 음수 홀수를 2로 나누는 경우

	음수 나눗셈의 경우를 조심하면서 구현해야 한다.
 */

#include <cstdio>

void m_div(int n)
{
	// 기저 조건 필요
	if(n == 0) return;
	// 짝수가 들어온 경우
	if(n%2 == 0){
		// 우리는 몫에는 관심이 없기때문에 음수 짝수가 오건, 양수 짝수가 오건 상관없다.
		m_div(-(n/2));
		printf("0");
	// 홀수가 들어온 경우
	} else {
		// 이 경우는 양수 홀수인지, 음수 홀수인지가 매우 중요하다.
		// 양수 홀수라면 몫이 짝수일때와 마찬가지이기 때문에 위와 마찬가지로 -(n/2)를 넘기면 된다.
		// 하지만 음수 홀수라면 몫의 절대값이 1차이나기 때문에 ((-n+1)/2)를 넘겨야 한다.
		(n > 0) ? (m_div(-(n/2))) : (m_div((-n+1)/2));
		printf("1");
	}
}

int main(void)
{
	int n;
	scanf("%d", &n);

	if(n == 0)
		printf("0\n");
	else
		m_div(n);
	return 0;
}
