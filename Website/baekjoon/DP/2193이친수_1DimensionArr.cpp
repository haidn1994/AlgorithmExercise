#include <iostream>
using namespace std;

// 연관성있는 문제 -> 2*n Tiling
// 이 문제부터 문제풀이-2가 시작되는데, 문제풀이-1과의 차이점은 어떤것이냐?
// 바로 문제에 문제를 어떻게 나눠야 할지를 정해주는 경우가 있었는데, 여기서부터는 없는 경우가 있다.

long long d[91];
int main(void)
{
	int n, i;
	cin >> n;
	// 생각을 좀 잘못했다. 
	// 첫번째 수를 구하는 것으로 "0으로 시작할수 없다"는 조건을 만족시킬 수 있다.
	d[1] = 1;
	d[2] = 1;

	for(i = 3; i <= n; i++){
		// 만약 뒤가 0이라면 하나 뺀것으로 구할 수 있고,
		// 만약 뒤가 1이라면 연속된 1은 올 수 없으므로 뒤는 1개로 결정된다.
		// 따라서 2*n타일링 문제와 거의 비슷하다는 사실을 알 수 있다.

		// 다이나믹 문제는 주어진 조건(식이라던지, 자료라던지 이런것)으로부터
		// 1. 식을 끌어내고(점화식)
		// 2. 그 식을 수하는 코드를 끌어내는 것을 잘 할 수 있어야 한다.
		d[i] = d[i-1] + d[i-2];
	}
	cout << d[n] << '\n';
	return 0;
}

